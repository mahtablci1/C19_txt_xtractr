{"ast":null,"code":"var _jsxFileName = \"/Users/u6107709/Documents/Kaggle/viz/react-viz/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport PaperComponent from './Paper/Paper.js';\nimport data from './risk_covid_join.json';\n\nclass App extends Component {\n  constructor() {\n    super(); // sort papers by whethere they're covid related\n\n    this.prevArticleHandler = () => {\n      if (this.state.curIndex > 0) {\n        this.setState({\n          curIndex: this.state.curIndex - 1\n        });\n      }\n    };\n\n    this.nextArticleHandler = () => {\n      if (this.state.curIndex < this.state.paperRefs.length) {\n        this.setState({\n          curIndex: this.state.curIndex + 1\n        });\n      }\n    };\n\n    this.loadMoreHandler = () => {\n      this.setState({\n        winSize: this.state.winSize + 10\n      });\n    };\n\n    let _papers = data.sort((p1, p2) => {\n      if (p1.is_covid_related && !p2.is_covid_related) return -1;else if (p2.is_covid_related && !p1.is_covid_related) return 1;else if (p1.is_covid_related && p2.is_covid_related) {\n        return p2.publish_time - p1.publish_time;\n      } else return 0;\n    }); // clean risk_factor column\n\n\n    _papers.forEach(p => {\n      if (typeof p.risk_factor === 'string') {\n        // use double quotes\n        p.risk_factor = p.risk_factor.replace(/\\'/g, '\"'); // remove duplicates\n\n        p.risk_factor = [...new Set(JSON.parse(p.risk_factor))];\n      }\n\n      if (!Array.isArray(p.risk_factor)) {\n        console.error('risk_factor column must be array of strings!', p.risk_factor);\n      }\n    });\n\n    _papers = _papers.reduce((acc, paper) => {\n      if (acc[paper.doc_id]) {\n        acc[paper.doc_id].risk_factor.push(...paper.risk_factor);\n      } else {\n        acc[paper.doc_id] = paper;\n      }\n\n      return acc;\n    }, {});\n    const papers = Object.values(_papers);\n    console.log(papers);\n    this.state = {\n      paperRefs: papers,\n      winSize: 10\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer'\n    };\n    const csvFilePath = 'smoke_df_summarized.csv';\n    const papers = this.state.paperRefs.slice(this.state.curIndex, this.state.winSize);\n    console.log(papers);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }\n    }, \"What do we know about COVID-19 risk factors? What have we learned from epidemiological studies?\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 5\n      }\n    }, papers.map(paper => {\n      return /*#__PURE__*/React.createElement(PaperComponent, {\n        key: paper.doc_id,\n        paper: paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 8\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.loadMoreHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }\n    }, \"Load More\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, this.state.winSize));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/u6107709/Documents/Kaggle/viz/react-viz/src/App.js"],"names":["React","Component","PaperComponent","data","App","constructor","prevArticleHandler","state","curIndex","setState","nextArticleHandler","paperRefs","length","loadMoreHandler","winSize","_papers","sort","p1","p2","is_covid_related","publish_time","forEach","p","risk_factor","replace","Set","JSON","parse","Array","isArray","console","error","reduce","acc","paper","doc_id","push","papers","Object","values","log","render","style","backgroundColor","font","border","padding","cursor","csvFilePath","slice","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport PaperComponent from './Paper/Paper.js';\nimport data from './risk_covid_join.json'\n\nclass App extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t\t// sort papers by whethere they're covid related\n\t\tlet _papers = data.sort((p1, p2) => {\n\t\t\tif (p1.is_covid_related && !p2.is_covid_related) return -1;\n\t\t\telse if (p2.is_covid_related && !p1.is_covid_related) return 1;\n\t\t\telse if (p1.is_covid_related && p2.is_covid_related) {\n\t\t\t\treturn p2.publish_time - p1.publish_time\n\t\t\t}\n\t\t\telse return 0;\n\t\t})\n\n\t\t// clean risk_factor column\n\t\t_papers.forEach(p => {\n\t\t\tif (typeof p.risk_factor === 'string') {\n\t\t\t\t// use double quotes\n\t\t\t\tp.risk_factor = p.risk_factor.replace(/\\'/g, '\"')\n\t\t\t\t// remove duplicates\n\t\t\t\tp.risk_factor = [...new Set(JSON.parse(p.risk_factor))]\n\t\t\t}\n\n\t\t\tif (!Array.isArray(p.risk_factor)) {\n\t\t\t\tconsole.error('risk_factor column must be array of strings!', p.risk_factor)\n\t\t\t}\n\t\t});\n\n\t\t_papers = _papers.reduce((acc, paper) => {\n\t\t\tif (acc[paper.doc_id]) {\n\t\t\t\tacc[paper.doc_id].risk_factor.push(...paper.risk_factor)\n\t\t\t} else {\n\t\t\t\tacc[paper.doc_id] = paper\n\t\t\t}\n\t\t\treturn acc;\n\t\t}, {})\n\n\t\tconst papers = Object.values(_papers)\n\t\tconsole.log(papers);\n\t\tthis.state = {\n\t\t\tpaperRefs: papers,\n\t\t\twinSize: 10\n\t\t}\n\t}\n\n\n\tprevArticleHandler = () => {\n\t\tif (this.state.curIndex > 0) {\n\t\t\tthis.setState({\n\t\t\t\tcurIndex: this.state.curIndex - 1\n\t\t\t});\n\t\t}\n\t}\n\n\tnextArticleHandler = () => {\n\t\tif (this.state.curIndex < this.state.paperRefs.length) {\n\t\t\tthis.setState({\n\t\t\t\tcurIndex: this.state.curIndex + 1\n\t\t\t});\n\t\t}\n\t}\n\n\tloadMoreHandler = () => {\n\t\tthis.setState({\n\t\t\twinSize: this.state.winSize + 10\n\t\t})\n\t}\n\n\trender() {\n\t\tconst style = {\n\t\t\tbackgroundColor: 'white',\n\t\t\tfont: 'inherit',\n\t\t\tborder: '1px solid blue',\n\t\t\tpadding: '8px',\n\t\t\tcursor: 'pointer'\n\t\t};\n\t\tconst csvFilePath = 'smoke_df_summarized.csv';\n\n\t\tconst papers = this.state.paperRefs.slice(this.state.curIndex,\n\t\t\tthis.state.winSize);\n\n\t\tconsole.log(papers)\n\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"app-header\">\n\t\t\t\t\t<h1>What do we know about COVID-19 risk factors? What have we learned from epidemiological studies?</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<div>\n\t\t\t\t\t{papers.map(paper => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PaperComponent\n\t\t\t\t\t\t\t\tkey={paper.doc_id}\n\t\t\t\t\t\t\t\tpaper={paper}\n\t\t\t\t\t\t\t/>);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t<button onClick={this.loadMoreHandler}>Load More</button>\n\t\t\t\t<p>{this.state.winSize}</p>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}