{"ast":null,"code":"var _jsxFileName = \"/Users/u6107709/Documents/Kaggle/viz/react-viz/src/Paper/Paper.js\";\nimport React, { Component } from 'react';\nimport './Paper.css';\n\nconst handleForce = (data, fileInfo) => console.log(data, fileInfo);\n/** Paper DTO\ninterface PaperDTO {\n\t// metadata\n\tdoc_id: string;\n\tjournal: string; // journal title\n\ttitle: string; // paper title\n\tauthors: string; // paper authors\n\tdoi: string; // digital object identifier\n\tpublish_time: string;\n\trisk_factor: string // stringified array of risk factors\n\tdesign: string // design of the research experiment\n\n\t// data\n\ttext_body: string; // paper full text\n\tabstract: string; // paper abstract\n\tscibert_summary: string; // paper summary\n\n\ttransmission_indicator: boolean;\n\tsmoke_indicator: boolean;\n\t// Unnamed: 0\n\t// Unnamed: 0.1\n\t// H index\n}\n*/\n\n/**\n * Receives prop with paper DTO.\n */\n\n\nclass PaperComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    if (props.paper.doc_id === \"5dc4268a42adf3d5c55c87b7f6518de600b057c5\") {\n      props.paper.relevant_section = `Breastfeeding is not contraindicated, based on current published guidelines â€“ a\n\t\t\tretrospective analysis of COVID-19 in pregnancy showed that none of the women had\n\t\t\tdetectable viral loads of SARS-CoV-2 in breastmilk. Regardless, if the patient chooses to\n\t\t\tbreastfeed, a face mask should be worn due to the close proximity between mother and child\n\t\t\tto reduce the risk of droplet transmission. The presence of coronavirus antibodies in\n\t\t\tbreastmilk depends on the gestation at which maternal infection occurred and if there was\n\t\t\tany preceding use of high-dose corticosteroids which could suppress maternal antibody\n\t\t\tresponses`;\n    }\n\n    this.state = {\n      paper: props.paper,\n      excerpt: props.paper.relevant_section\n    };\n    this.state.paper.scibert_summary = this.state.paper.scibert_summary || 'lorem ipsum';\n    this.setExcerpt = this.setExcerpt.bind(this);\n  } // todo: skip splitting when abstract is retrieved as string[] directly\n\n\n  render() {\n    let {\n      doc_id,\n      journal,\n      title,\n      authors,\n      doi,\n      text_body,\n      abstract,\n      scibert_summary,\n      relevant_section,\n      design,\n      risk_factor,\n      publish_time\n    } = this.state.paper;\n    const excerpt = this.state.excerpt;\n    const relevant_section_sentences = excerpt.split(/(?<=\\.\\s+)/); // const scibert_summary_sentences = scibert_summary.split(/(?<=\\.\\s+)/);\n\n    const link = `http://doi.org/${doi}`; // console.log(risk_factor, Array.isArray(risk_factor))\n    // const riskFactors = JSON.parse(risk_factor);\n\n    const riskFactors = risk_factor;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper-metadata\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 6\n      }\n    }, \"Title:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }\n    }, title), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 6\n      }\n    }, \"Journal:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 24\n      }\n    }, journal), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }\n    }, \"Publication Date:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    }, new Date(publish_time).toUTCString()), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 6\n      }\n    }, \"Doi:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 20\n      }\n    }, doi), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }, \"Design:\"), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-case\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }\n    }, design), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 6\n      }\n    }, \"Relevant Risk Factors\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn-group-toggle\",\n      \"data-toggle\": \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 6\n      }\n    }, riskFactors.map(riskFactor => {\n      return /*#__PURE__*/React.createElement(\"label\", {\n        key: riskFactor,\n        className: \"btn btn-secondary active title-case\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }\n      }, riskFactor, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: true,\n        onChange: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 93\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      target: \"_blank\",\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }, \"Reference\")), \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 60\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paper-summary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: excerpt === relevant_section ? 'active' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, \"Relevant Snippet\"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n      name: `${doc_id}-excerpt`,\n      type: \"radio\",\n      checked: excerpt === relevant_section,\n      onChange: this.setExcerpt.bind(this, relevant_section),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 102\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: excerpt === scibert_summary ? 'active' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \"Extracted Summary\"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n      name: `${doc_id}-excerpt`,\n      type: \"radio\",\n      checked: excerpt === scibert_summary,\n      onChange: this.setExcerpt.bind(this, scibert_summary),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 102\n      }\n    }))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, relevant_section_sentences.map((sentence, idx) => /*#__PURE__*/React.createElement(\"span\", {\n      key: idx,\n      className: \"sentence\",\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 61\n      }\n    }, sentence))))));\n  }\n\n  setExcerpt(excerpt) {\n    if (this.state.excerpt !== excerpt) {\n      this.setState({\n        excerpt: excerpt\n      });\n    }\n  }\n\n}\n\n;\nexport default PaperComponent;","map":{"version":3,"sources":["/Users/u6107709/Documents/Kaggle/viz/react-viz/src/Paper/Paper.js"],"names":["React","Component","handleForce","data","fileInfo","console","log","PaperComponent","constructor","props","paper","doc_id","relevant_section","state","excerpt","scibert_summary","setExcerpt","bind","render","journal","title","authors","doi","text_body","abstract","design","risk_factor","publish_time","relevant_section_sentences","split","link","riskFactors","Date","toUTCString","map","riskFactor","sentence","idx","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Paper.css';\n\nconst handleForce = (data, fileInfo) => console.log(data, fileInfo);\n\n\n/** Paper DTO\ninterface PaperDTO {\n\t// metadata\n\tdoc_id: string;\n\tjournal: string; // journal title\n\ttitle: string; // paper title\n\tauthors: string; // paper authors\n\tdoi: string; // digital object identifier\n\tpublish_time: string;\n\trisk_factor: string // stringified array of risk factors\n\tdesign: string // design of the research experiment\n\n\t// data\n\ttext_body: string; // paper full text\n\tabstract: string; // paper abstract\n\tscibert_summary: string; // paper summary\n\n\ttransmission_indicator: boolean;\n\tsmoke_indicator: boolean;\n\t// Unnamed: 0\n\t// Unnamed: 0.1\n\t// H index\n}\n*/\n\n/**\n * Receives prop with paper DTO.\n */\nclass PaperComponent extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tif (props.paper.doc_id === \"5dc4268a42adf3d5c55c87b7f6518de600b057c5\") {\n\t\t\tprops.paper.relevant_section = `Breastfeeding is not contraindicated, based on current published guidelines â€“ a\n\t\t\tretrospective analysis of COVID-19 in pregnancy showed that none of the women had\n\t\t\tdetectable viral loads of SARS-CoV-2 in breastmilk. Regardless, if the patient chooses to\n\t\t\tbreastfeed, a face mask should be worn due to the close proximity between mother and child\n\t\t\tto reduce the risk of droplet transmission. The presence of coronavirus antibodies in\n\t\t\tbreastmilk depends on the gestation at which maternal infection occurred and if there was\n\t\t\tany preceding use of high-dose corticosteroids which could suppress maternal antibody\n\t\t\tresponses`;\n\t\t}\n\n\t\tthis.state = {\n\t\t\tpaper: props.paper,\n\t\t\texcerpt: props.paper.relevant_section\n\t\t};\n\t\tthis.state.paper.scibert_summary = this.state.paper.scibert_summary || 'lorem ipsum';\n\t\tthis.setExcerpt = this.setExcerpt.bind(this);\n\t}\n\n\n\t// todo: skip splitting when abstract is retrieved as string[] directly\n\trender() {\n\n\t\tlet {\n\t\t\tdoc_id, journal, title, authors, doi,\n\t\t\ttext_body, abstract, scibert_summary,\n\t\t\trelevant_section, design, risk_factor,\n\t\t\tpublish_time,\n\t\t} = this.state.paper;\n\n\t\tconst excerpt = this.state.excerpt;\n\t\tconst relevant_section_sentences = excerpt.split(/(?<=\\.\\s+)/);\n\t\t// const scibert_summary_sentences = scibert_summary.split(/(?<=\\.\\s+)/);\n\t\tconst link = `http://doi.org/${doi}`;\n\t\t// console.log(risk_factor, Array.isArray(risk_factor))\n\t\t// const riskFactors = JSON.parse(risk_factor);\n\t\tconst riskFactors = risk_factor\n\t\treturn (\n\t\t\t<div className=\"paper-container\">\n\t\t\t\t<div className=\"paper-metadata\">\n\t\t\t\t\t<h4>Title:</h4> <span>{title}</span>\n\t\t\t\t\t<h4>Journal:</h4> <span>{journal}</span>\n\t\t\t\t\t<h4>Publication Date:</h4> <span>{(new Date(publish_time)).toUTCString()}</span>\n\n\t\t\t\t\t{/* <h4>Authors:</h4> <span>{authors}</span> */}\n\t\t\t\t\t<h4>Doi:</h4> <span>{doi}</span>\n\t\t\t\t\t<h4>Design:</h4> <span className=\"title-case\">{design}</span>\n\t\t\t\t\t<h4>Relevant Risk Factors</h4>\n\t\t\t\t\t<div className=\"btn-group-toggle\" data-toggle=\"buttons\">\n\t\t\t\t\t\t{riskFactors.map(riskFactor => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<label key={riskFactor} className=\"btn btn-secondary active title-case\">{riskFactor}<input type=\"checkbox\" checked onChange={() => {}} /></label>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t\t<h4><a target=\"_blank\" href={link}>Reference</a></h4> <span></span>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"paper-data\">\n\t\t\t\t\t<div className=\"paper-summary\">\n\t\t\t\t\t\t<h4>\n\t\t\t\t\t\t\t<label><span className={excerpt === relevant_section ? 'active' : ''}>Relevant Snippet</span> <input name={`${doc_id}-excerpt`} type=\"radio\" checked={excerpt === relevant_section} onChange={this.setExcerpt.bind(this,relevant_section)}/></label>\n\t\t\t\t\t\t\t<label><span className={excerpt === scibert_summary ? 'active' : ''}>Extracted Summary</span> <input name={`${doc_id}-excerpt`} type=\"radio\" checked={excerpt === scibert_summary} onChange={this.setExcerpt.bind(this,scibert_summary)}/></label>\n\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t<p>{relevant_section_sentences.map((sentence, idx) => <span key={idx} className=\"sentence\" className=\"\">{sentence}</span>)}</p>\n\t\t\t\t\t\t{/* <p className={excerpt === scibert_summary ? 'active' : ''}>{scibert_summary_sentences.map((sentence, idx) => <span key={idx} className=\"sentence\">{sentence}</span>)}</p> */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n\n\tsetExcerpt(excerpt) {\n\t\tif (this.state.excerpt !== excerpt) {\n\t\t\tthis.setState({excerpt: excerpt})\n\t\t}\n\t}\n\n};\n\nexport default PaperComponent;\n"]},"metadata":{},"sourceType":"module"}